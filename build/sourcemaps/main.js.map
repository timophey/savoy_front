{"version":3,"sources":["accordion.js","header_sticky.js","popup.js"],"names":["CSSpoiler","node","eventOpened","CustomEvent","trigger","querySelector","body","classList","add","actionOpen","bh","scrollHeight","style","setProperty","dispatchEvent","actionClose","remove","actionToggle","contains","addEventListener","open","close","toggle","CSAccordion","root","listNodes","querySelectorAll","arSpoiler","switchOpened","n","forEach","sp","i","el","bind","document","filter","matches","elHeader","windowScrollHandler","e","y","window","scrollY","st","themeNow","dataset","theme","themeSet","initPopups","listTriggers","console","log","togglePopup","name","elPopup","concat","listTrigger","isOpened","opened","scroll","scrolled","popupOpened","setTimeout","popup"],"mappings":"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","file":"../js/main.js","sourcesContent":["function CSSpoiler(node){\n    let eventOpened = new CustomEvent('opened');\n    let trigger = node.querySelector('.spoiler-head');\n    let body = node.querySelector('.spoiler-body');\n    node.classList.add('spoiler-initialized');\n    let actionOpen = function(){\n        let bh = body.scrollHeight;\n        node.classList.add('active');\n        node.style.setProperty('--bh',bh);\n        node.dispatchEvent(eventOpened);\n    }\n    let actionClose = function(){\n        node.classList.remove('active');\n        node.style.setProperty('--bh',null);\n    }\n    let actionToggle = function(){\n        return node.classList.contains('active') ? actionClose() : actionOpen();\n    }\n    trigger.addEventListener('click',actionToggle);\n    return {\n        open: actionOpen,\n        close: actionClose,\n        toggle: actionToggle,\n    }\n}\n\nfunction CSAccordion(root){\n    let listNodes = root.querySelectorAll('.spoiler');\n    let arSpoiler = [];\n    let switchOpened = function(n){\n        arSpoiler.forEach((sp,i) => i != n && arSpoiler[i].close());\n    }\n    listNodes.forEach((el,i) => {\n        arSpoiler[i] = new CSSpoiler(el);\n        el.addEventListener('opened',switchOpened.bind(root,i));\n    });\n    \n}\ndocument.addEventListener('DOMContentLoaded',()=>{\n    document.querySelectorAll('.spoiler').filter(el => !el.matches('.accordion .spoiler')).forEach(el => new CSSpoiler(el));\n    document.querySelectorAll('.accordion').forEach(el => new CSAccordion(el));\n});\n","let elHeader;\ndocument.addEventListener('DOMContentLoaded',()=>{\n    elHeader = document.querySelector('.siteWrapper header');\n})\nlet windowScrollHandler = function(e){\n    if(!elHeader) return;\n    let y = window.scrollY, st = (y > 0);\n    let themeNow = elHeader.dataset.theme;\n    let themeSet = (st) ? 'dark':'light';\n    if(themeNow != themeSet){\n        // console.log(themeSet);\n        elHeader.dataset.theme = themeSet;\n    }\n}\nwindow.addEventListener('scroll',windowScrollHandler);","\n// popups\n\nlet initPopups = function(){\n    let listTriggers = document.querySelectorAll('[data-popup]');\n    console.log(listTriggers)\n    let togglePopup = function(name){\n        let elPopup = document.querySelector(`.popup[data-name=\"${name}\"]`); if(!elPopup) return;\n        let listTrigger = document.querySelectorAll(`[data-popup=\"${name}\"]`);\n        let isOpened = (elPopup.dataset.opened == 1);\n        if(isOpened){\n            window.scroll(0,elPopup.dataset.scrolled); // (x,y)\n            delete document.body.dataset.popupOpened;\n            elPopup.dataset.opened = 0;\n            elPopup.dataset.scrolled = 0;\n            listTrigger.forEach(el => el.classList.remove('active'));\n        }else{\n            elPopup.dataset.opened = 1;\n            elPopup.dataset.scrolled = window.scrollY;\n            document.body.dataset.popupOpened = name;\n            setTimeout(()=>window.scroll(0,0),300);\n            \n            listTrigger.forEach(el => el.classList.add('active'));\n        }\n        // console.log('togglePopup',elPopup,isOpened)\n    }\n    listTriggers.forEach(el => el.addEventListener('click',togglePopup.bind(el,el.dataset.popup)));\n\n}\n\ndocument.addEventListener('DOMContentLoaded',initPopups);\n"]}